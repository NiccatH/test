-
  const sectionDataMenu = {
    title: "Меню тз",
    paragraphs: [
      '<b>Анимация появления</b>',
      'При открытии: Сначала появляется меню, затем внутренний контент. Пункты внутри появляются с разной задержкой - эффект "лесенки"',
      'При закрытии: Внутренний контент исчезает до закрытия меню, без задержки',
      'Анимация меню на данном сайте реализована с помощью css (это база). Можете так же реализовать анимацию с помощью gsap',
      '<b>JS</b>',
      'Для блокировки скролла используется window.scrollLock',
      'Должны быть реализованы функции или методы для открытия и закрытия меню, которые можно использовать в других модулях',
    ],
  }

  const sectionDataLoader = {
    title: "Лоадер тз",
    paragraphs: [
      'Анимация лоадера произвольная, можно использовать css keyframes или gsap',
      'После загрузки страницы мы всегда находимся вверху страницы (не должно быть видно скачка)',
      'Скролл страницы заблокирован во время загрузки'
    ],
  }

  const sectionDataFirstScreen = {
    title: "Сборка первого экрана тз",
    paragraphs: [
      'Для анимации используйте неколько разных css свойств и небольшие задержки',
      'Для построчной или посимвольной анимации текста используйте <a href="https://splitting.js.org" target="_blank">splitting.js</a> (пример: интро этого сайта)',
    ],
  }

  const sectionDataShowOnScroll = {
    title: "Появление блоков",
    paragraphs: [
      'доскролили и вжух!',
      'Можно делать через классы и высчитывать по скроллу getBoundingClientRect каждого блока, но гораздо проще использовать ScrollTrigger.batch()',
    ],
  }

  const sectionDataParallax = {
    title: "Параллакс по скроллу",
    paragraphs: [
      'Эффекты, которые постоянно срабатывают по скроллу<br>Скроллим скроллим и вжух вжух вжух!',
    ],
  }

  const scrollCards = [
    {
      gsapAttr: {
        'data-animate': 'fade',
      },
      paragraph: true,
      title: 'fade',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
    {
      gsapAttr: {
        'data-animate': 'fade',
      },
      paragraph: true,
      title: 'fade',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
    {
      gsapAttr: {
        'data-animate': 'fadeIn',
      },
      paragraph: true,
      title: 'fade-in',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
    {
      gsapAttr: {
        'data-animate': 'fadeIn',
      },
      paragraph: true,
      title: 'fade-in',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
    {
      gsapAttr: {
        'data-animate': 'fadeScale',
      },
      paragraph: true,
      title: 'fade-scale',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
    {
      gsapAttr: {
        'data-animate': 'fadeScale',
      },
      paragraph: true,
      title: 'fade-scale',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-animate-item': '',
      },
    },
  ]

  const parallaxCards = [
    {
      gsapAttr: {
        'data-parallax': 'fadeScale',
      },
      paragraph: true,
      title: 'fade-scale',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-parallax': 'item',
      },
    },
    {
      gsapAttr: {
        'data-parallax': 'fadeScale',
      },
      paragraph: true,
      title: 'fade-scale',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-parallax': 'item',
      },
    },
    {
      gsapAttr: {
        'data-parallax': 'transformY',
      },
      paragraph: true,
      title: 'transform y',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-parallax': 'item',
      },
    },
     {
      gsapAttr: {
        'data-parallax': 'transformY',
        'data-from': '70%',
      },
      paragraph: true,
      title: 'transform y',
      dataAttr: {
        'class': 'card-simple--dark card-simple--centered',
        'data-parallax': 'item',
      },
    },
  ]

  const mapOne =  {
    title: 'Задание по карте №1',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Настроить кастомный пин на карте так, что бы его стрелочка четко указывала на центр координат, которые вы можете придумать сами',
      'На десктопной версии при скролле колесиком мышки, карта не должна масштабироваться.',
    ],
    dataAttr: {
      'data-map': 'map-1',
      'data-center': '59.968513, 30.317772',
      'data-zoom': '17',
    },
  }

  const mapTwo =  {
    title: 'Задание по карте №2',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Настроить кастомный пин на карте так, что бы его стрелочка четко указывала на центр координат, которые вы можете придумать сами',
      'На десктопной версии при скролле колесиком мышки, карта не должна масштабироваться.',
      'Создать и расположить пины на карте из json файла. При клике на каждый пин выводить какую нибудь информацию в небольшом всплывающем окошке, которое будет появляться над пином',
    ],
    dataAttr: {
      'data-map': 'map-2',
      'data-center': '59.968513, 30.317772',
      'data-zoom': '15',
      'data-markers-url': 'data/maps-markers.json',
    },
  }

  const mapThree =  {
    title: 'Задание по карте №3',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Настроить кастомный пин на карте так, что бы его стрелочка четко указывала на центр координат, которые вы можете придумать сами',
      'На десктопной версии при скролле колесиком мышки, карта не должна масштабироваться. Масштабировать ее можно только при нажатии клавиши Ctrl + колесико мышки. Если пользователь навел курсор на карту и начинает скролить мышкой, то на карте должен появиться overlay с инструкцией, что для того что бы масштабировать карту нажмите Ctrl + колесико мышки',
      'Создать и расположить пины на карте из json файла. При клике на каждый пин выводить какую нибудь информацию в небольшом всплывающем окошке, которое будет появляться над пином',
      'Создать блок с фильтрами под картой и при клике на каждый элемент фильтра настроить фильтрацию пинов на карте в зависимости от выбранного фильтра',
      'Если выбран изначально фильтр "Все объекты" и открыт у кого нибудь пина баллун, то при активации фильтра этого пина у которого открыт баллун, карта должна отфильтроваться, но баллун не должен закрываться. Если у пина открыт баллун и мы выбираем другой фильтр, то баллун должен закрыться',
    ],
    dataAttr: {
      'data-map': 'map-3',
      'data-center': '59.968513, 30.317772',
      'data-zoom': '15',
      'data-markers-url': 'data/maps-markers.json',
    },
    message: true,
  }

  const mapFour =  {
    title: 'Задание по карте №4',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Настроить кастомный пин на карте так, что бы его стрелочка четко указывала на центр координат, которые вы можете придумать сами',
      'На десктопной версии при скролле колесиком мышки, карта не должна масштабироваться. Масштабировать ее можно только при нажатии клавиши Ctrl + колесико мышки. Если пользователь навел курсор на карту и начинает скролить мышкой, то на карте должен появиться overlay с инструкцией, что для того что бы масштабировать карту нажмите Ctrl + колесико мышки',
      'Создать и расположить пины на карте из json файла. При клике на каждый пин выводить какую нибудь информацию в небольшом всплывающем окошке, которое будет появляться над пином',
      'Реализовать кластеризацию меток. Если зум карты становится меньше, то пины должны собираться в один кластер',
      'При клике на кластер должно раскрываться окошко, в котором будет списком указаны, какие пини находятся в этой кластере',
    ],
    dataAttr: {
      'data-map': 'map-4',
      'data-center': '59.968513, 30.317772',
      'data-zoom': '12',
      'data-markers-url': 'data/maps-markers.json',
      'data-cluster': 'true',
    },
    message: true,
  }

  const mapFive =  {
    title: 'Доп задание(1вариант)',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Сделайте кастомную яндекс карту территории Чехословакии ( нужно объединить Чехию и Словакию) на сером фоне',
      'Все регионы должны быть одного цвета, также на карте должны быть отмечены столицы Чехии и Словакии',
    ],
    dataAttr: {
      'data-map': 'map-5',
      'data-center': '49.5, 18.5',
      'data-zoom': '5',
      'data-controls': 'zoomControl',
    },
    message: false,
  }

  const mapSix =  {
    title: 'Доп задание(2 вариант)',
    subTitle: 'Техническое задание',
    paragraphs: [
      'Реализовать карту через API Яндекс карт',
      'Сделайте кастомную яндекс карту территории Чехословакии ( нужно объединить Чехию и Словакию) на сером фоне',
      'Все регионы должны быть одного цвета, также на карте должны быть отмечены столицы Чехии и Словакии',
    ],
    dataAttr: {
      'data-map': 'map-6',
      'data-center': '49.5, 18.5',
      'data-zoom': '6',
    },
    message: false,
  }
